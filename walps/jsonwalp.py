import yaml
import json
import argparse
import requests
from requests.auth import HTTPBasicAuth
import pprint
import sys
import os
data="{'always': False, 'enabled': True, 'name': 'latency-headers'}"
print(data)
data="{'_links': [{'href': '/api/acm/v1/infrastructure/workspaces/team-sentence/environments/sentence-env', 'rel': 'SELF'}], 'id': 3, 'functions': ['DEVPORTAL', 'API-GATEWAY'], 'metadata': {'kind': 'environment', 'link': {'rel': '/api/acm/v1/infrastructure/workspaces/team-sentence/environments/sentence-env'}, 'ref': '/api/acm/v1/infrastructure/workspaces/team-sentence', 'tags': []}, 'name': 'sentence-env', 'proxies': [{'backends': [{'enableSRVRecordLookUp': False, 'serviceContextRoot': '/', 'serviceName': 'portalapi-svc', 'serviceTargets': [{'hostname': '127.0.0.1', 'listener': {'enableTLS': False, 'port': 8080, 'transportProtocol': 'HTTP'}, 'maxConnections': 0, 'maxFails': 0}]}], 'configs': [{'proxyConfig': {'backends': [{'enableSRVRecordLookUp': False, 'serviceContextRoot': '/', 'serviceName': 'portalapi-svc', 'serviceTargets': [{'hostname': '127.0.0.1', 'listener': {'enableTLS': False, 'port': 8080, 'transportProtocol': 'HTTP'}, 'maxConnections': 0, 'maxFails': 0}]}], 'hostname': 'dev.sentence.com'}}], 'hostnames': ['dev.sentence.com'], 'listeners': [{'ipv6': False, 'port': 80, 'tlsEnabled': False, 'transportProtocol': 'HTTP'}], 'onboardingCommands': ['curl -k https://<CTRL-FQDN>/install/nginx-agent > install.sh && sudo sh install.sh -g devportal-cluster && sudo systemctl start nginx-agent', 'wget https://<CTRL-FQDN>/install/nginx-agent --no-check-certificate -O install.sh && sudo sh install.sh -g devportal-cluster && sudo systemctl start nginx-agent'], 'policies': {'proxy-response-headers': [{'action': {'config': [{'always': False, 'enabled': True, 'name': 'hide-nginx-headers'}], 'customResponseHeaders': [{'always': False, 'key': 'Cache-Control', 'value': 'max-age=1d, must-revalidate'}]}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'inbound', 'context': 'global'}}], 'rate-limit': [{'action': {'grpcStatusCode': 14, 'limits': [{'rate': '50r/s', 'rateLimitBy': 'client.ip', 'throttle': {'burst': 20, 'noDelay': True}, 'zoneSize': '10M'}], 'returnCode': 429}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'inbound', 'context': 'global'}}], 'request-body-size-limit': [{'action': {'grpcStatusCode': 8, 'returnCode': 413, 'size': '66M'}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'inbound', 'context': 'global'}}]}, 'proxyClusterName': 'devportal-cluster', 'runtime': 'PORTAL-PROXY'}, {'hostnames': ['api.sentence.com'], 'listeners': [{'ipv6': False, 'port': 80, 'tlsEnabled': False, 'transportProtocol': 'HTTP'}], 'onboardingCommands': ['curl -k https://<CTRL-FQDN>/install/nginx-agent > install.sh && sudo sh install.sh -g api-cluster && sudo systemctl start nginx-agent', 'wget https://<CTRL-FQDN>/install/nginx-agent --no-check-certificate -O install.sh && sudo sh install.sh -g api-cluster && sudo systemctl start nginx-agent'], 'policies': {'error-response-format': [{'action': {'400': {'errorCode': '400', 'errorMessage': 'Bad Request', 'grpcStatusCode': 13}, '401': {'errorCode': '401', 'errorMessage': 'Unauthorized', 'grpcStatusCode': 16}, '402': {'errorCode': '402', 'errorMessage': 'Payment Required', 'grpcStatusCode': 14}, '403': {'errorCode': '403', 'errorMessage': 'Forbidden', 'grpcStatusCode': 7}, '404': {'errorCode': '404', 'errorMessage': 'Not Found', 'grpcStatusCode': 12}, '405': {'errorCode': '405', 'errorMessage': 'Method Not Allowed', 'grpcStatusCode': 13}, '408': {'errorCode': '408', 'errorMessage': 'Request Timeout', 'grpcStatusCode': 4}, '413': {'errorCode': '413', 'errorMessage': 'Request Entity Too Large', 'grpcStatusCode': 8}, '414': {'errorCode': '414', 'errorMessage': 'Request URI Too Long', 'grpcStatusCode': 8}, '415': {'errorCode': '415', 'errorMessage': 'Unsupported Media Type', 'grpcStatusCode': 13}, '426': {'errorCode': '426', 'errorMessage': 'Upgrade Required', 'grpcStatusCode': 13}, '429': {'errorCode': '429', 'errorMessage': 'Too Many Requests', 'grpcStatusCode': 14}, '500': {'errorCode': '500', 'errorMessage': 'Internal Server Error', 'grpcStatusCode': 13}, '501': {'errorCode': '501', 'errorMessage': 'Not Implemented', 'grpcStatusCode': 12}, '502': {'errorCode': '502', 'errorMessage': 'Bad Gateway', 'grpcStatusCode': 14}, '503': {'errorCode': '503', 'errorMessage': 'Service Unavailable', 'grpcStatusCode': 14}, '504': {'errorCode': '504', 'errorMessage': 'Gateway Timeout', 'grpcStatusCode': 14}, '511': {'errorCode': '511', 'errorMessage': 'Network Authentication Required', 'grpcStatusCode': 14}}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'outbound', 'context': 'global'}}], 'log-format': [{'action': {'enablePrettyPrint': False, 'errorLogSeverity': 'WARN', 'logDestination': {'accessLogFileLocation': '/var/log/nginx/', 'errorLogFileLocation': '/var/log/nginx/', 'type': 'FILE'}, 'logFormat': {'include': ['BASIC', 'INGRESS', 'BACKEND', 'RESPONSE'], 'variables': []}, 'type': 'JSON'}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'outbound', 'context': 'global'}}], 'proxy-response-headers': [{'action': {'config': [{'always': True, 'enabled': True, 'name': 'web-security-headers'}, {'always': True, 'enabled': True, 'name': 'correlation-id'}, {'always': False, 'enabled': True, 'name': 'latency-headers'}, {'always': True, 'enabled': True, 'name': 'cache-headers'}, {'always': False, 'enabled': False, 'name': 'hide-nginx-headers'}, {'always': True, 'enabled': True, 'name': 'client-headers'}]}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'inbound', 'context': 'global'}}], 'request-body-size-limit': [{'action': {'grpcStatusCode': 8, 'returnCode': 413, 'size': '1M'}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'inbound', 'context': 'global'}}], 'request-correlation-id': [{'action': {'httpHeaderName': 'x-correlation-id'}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'inbound', 'context': 'global'}}]}, 'proxyClusterName': 'api-cluster', 'runtime': 'GATEWAY-PROXY'}, {'hostnames': ['acm.dev.sentence.com'], 'listeners': [{'ipv6': False, 'port': 81, 'tlsEnabled': False, 'transportProtocol': 'HTTP'}], 'onboardingCommands': ['curl -k https://<CTRL-FQDN>/install/nginx-agent > install.sh && sudo sh install.sh -g devportal-cluster && sudo systemctl start nginx-agent', 'wget https://<CTRL-FQDN>/install/nginx-agent --no-check-certificate -O install.sh && sudo sh install.sh -g devportal-cluster && sudo systemctl start nginx-agent'], 'policies': {'proxy-response-headers': [{'action': {'config': [{'always': False, 'enabled': True, 'name': 'hide-nginx-headers'}]}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'inbound', 'context': 'global'}}], 'rate-limit': [{'action': {'grpcStatusCode': 14, 'limits': [{'rate': '100r/s', 'rateLimitBy': 'client.ip', 'throttle': {'burst': 20, 'noDelay': True}, 'zoneSize': '10M'}], 'returnCode': 429}, 'metadata': {'labels': {'targetPolicyName': 'default'}}, 'systemMetadata': {'appliedOn': 'inbound', 'context': 'global'}}]}, 'proxyClusterName': 'devportal-cluster', 'runtime': 'INT-PORTAL-ACM-PROXY'}], 'systemProperties': {'acmHostName': '10.1.1.6'}, 'type': 'NON-PROD'}"
print(data)

